{
  "id": "metadata",
  "openapi": "3.0.1",
  "info": {
    "title": "Metadata",
    "description": "A virtual data room (VDR) allows you to store and distribute documents. VDRs may contain one or many projects\nor content libraries (contexts). Within a VDR, Datasite uses metadata to identify content. You can think of\nmetadata like a tree, with filerooms at the top, and folders, files, and other content nested within the fileroom.\n\nYou can use the Metadata API for fileroom and folder management:\n  - Retrieve the index list of a project.\n  - Retrieve all metadata in a folder or fileroom or a single metadata.\n  - Create filerooms and folders.\n  - Rename filerooms and folders.\n  - Delete filerooms and folders.**Note the Delete operation is permanent.**\n\nYou can also use the Metadata API to:\n  - Retrieve permissions of specific pieces of metadata within a project by role.\n  - Update the permissions of specific pieces of metadata within a project by role.\n  - Update the publish status of metadata.\n\nThe permission values on the metadata can be view, hidden, print, download, or manage.\n\n\n## Errors\n\nThe following is a list of errors that might be produced by this service.\n\n| Error Code | HTTP Status | Description |\n| --- | --- | --- |\n| DS0001 | 500 INTERNAL_SERVER_ERROR | Generic internal server error<br/><br/>*Example Message*:<br/>`Unexpected error` |\n| DS0002 | 404 NOT_FOUND | Generic not found error.  Used when the error source or request path makes it obvious what's not found or where a cause will be attached and logged error will facilitate in diagnosis<br/><br/>*Example Message*:<br/>`Resource Not Found` |\n| DS0003 | 404 NOT_FOUND | Not found error identifying what's not found using unstructured information in the message<br/><br/>*Example Message*:<br/>`some resource Not Found` |\n| DS0010 | 400 BAD_REQUEST | API expected a request body that was not provided<br/><br/>*Example Message*:<br/>`Required request body is missing` |\n| DS0011 | 400 BAD_REQUEST | Unable to deserialize the request<br/><br/>*Example Message*:<br/>`Cannot Deserialize` |\n| DS0012 | 400 BAD_REQUEST | Validation on an argument failed<br/><br/>*Example Message*:<br/>`Method argument not valid` |\n| DS0013 | 400 BAD_REQUEST | Validation on an argument failed<br/><br/>*Example Message*:<br/>`Constraint violation` |\n| DS0014 | 400 BAD_REQUEST | *Example Message*:<br/>`Attribute Not Valid` |\n| DS0015 | 405 METHOD_NOT_ALLOWED | *Example Message*:<br/>`Method Not Allowed` |\n| DS0016 | 415 UNSUPPORTED_MEDIA_TYPE | *Example Message*:<br/>`Unsupported Media Type` |\n| DS0017 | 403 FORBIDDEN | *Example Message*:<br/>`Forbidden` |\n| DS0018 | 400 BAD_REQUEST | *Example Message*:<br/>`Bad Request` |\n| DS0019 | 400 BAD_REQUEST | Input is mismatched and cannot be deserialized. Please refer to the API documentation.<br/><br/>*Example Message*:<br/>`Mismatched Input` |\n| DS0020 | 400 BAD_REQUEST | *Example Message*:<br/>`Unable to read request body` |\n| PMD4000 | 400 BAD_REQUEST | *Example Message*:<br/>`Only project context is supported` |\n| PMD4002 | 400 BAD_REQUEST | *Example Message*:<br/>`Metadata name is required` |\n| PMD4030 | 403 FORBIDDEN | *Example Message*:<br/>`Metadata creation is forbidden` |\n| PMD4040 | 404 NOT_FOUND | *Example Message*:<br/>`Metadata not found` |\n| PMD4041 | 404 NOT_FOUND | *Example Message*:<br/>`Role not found` |\n| PMD4042 | 404 NOT_FOUND | *Example Message*:<br/>`Operation not found` |\n| PMD4090 | 409 CONFLICT | *Example Message*:<br/>`Metadata name already exists` |\n| PMD5000 | 500 INTERNAL_SERVER_ERROR | *Example Message*:<br/>`Unexpected error` |\n| UPG0001 | 500 INTERNAL_SERVER_ERROR | This will be produced as a final fallback for any unhandled errors<br/><br/>*Example Message*:<br/>`some adhoc unexpected error` |\n| UPG0002 | 500 INTERNAL_SERVER_ERROR | Produced when the request is valid, but some other scenario has resulted in more than one usage policy being selected when only one should.<br/><br/>*Example Message*:<br/>`It is unclear which usage policy to use` |\n| UPG0003 | 500 INTERNAL_SERVER_ERROR | The guard request should have returned a resource reservation id and did not<br/><br/>*Example Message*:<br/>`The guard request should have returned a resource reservation id and did not` |\n| UPG0004 | 500 INTERNAL_SERVER_ERROR | The HTTP request context is not defined<br/><br/>*Example Message*:<br/>`The HTTP request context is not defined` |\n| UPG0005 | 403 FORBIDDEN | User is not a member of the usage policy specified<br/><br/>*Example Message*:<br/>`User is not a member of the usage policy specified` |\n\n| Included Audiences | Included Lifecycles |\n| --- | --- |\n| PUBLIC | GA |\n\n",
    "version": "2024-04-01",
    "x-datasite-summary": "Retrieve, create, rename, and delete filerooms, their metadata children, and manage permissions in your project with the Metadata API.",
    "x-datasite-audience-lifecycle-index": [
      {
        "audience": "PUBLIC",
        "lifecycle": "GA"
      }
    ]
  },
  "servers": [
    {
      "url": "https://api.americas.datasite.com",
      "description": "Datasite API Gateway - USA"
    }
  ],
  "security": [
    {
      "AuthToken": []
    }
  ],
  "paths": {
    "/{contextType}/{contextId}/metadata/{metadataId}/children": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieve all metadata in a folder or fileroom",
        "description": "\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "getAllMetadata",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListMetadataResponse"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      }
    },
    "/{contextType}/{contextId}/filerooms": {
      "get": {
        "tags": [
          "Filerooms"
        ],
        "summary": "Retrieve all filerooms",
        "description": "\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "getAllFilerooms",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListMetadataResponse"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      }
    },
    "/{contextType}/{contextId}/metadata/{metadataId}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieve a single metadata",
        "description": "\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "getMetadata",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMetadataResponse"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      },
      "delete": {
        "tags": [
          "Metadata"
        ],
        "summary": "Delete a metadata",
        "description": "\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "deleteMetadata",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      },
      "patch": {
        "tags": [
          "Metadata"
        ],
        "summary": "Update a metadata",
        "description": "\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "updateMetadata",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestMetadataUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMetadataResponse"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      }
    },
    "/{contextType}/{contextId}/metadata/{metadataId}/permissions/{roleId}": {
      "patch": {
        "tags": [
          "Metadata"
        ],
        "summary": "Update permissions for a metadata",
        "description": "Updates the permissions for a specific metadata item identified by its ID and role ID.\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "updateMetadataPermissions",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestUpdateMetadataPermissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOperationResponse"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      }
    },
    "/{contextType}/{contextId}/metadata/{metadataId}/permissions/operations/{operationId}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieve permissions update operation status",
        "description": "Retrieve permissions update operation status for a specific metadata item identified by its ID and operation ID.\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "getMetadataPermissionsUpdateStatus",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOperation"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      }
    }
  },
  "components": {
    "schemas": {
      "ContextTypePathParameter": {
        "type": "string",
        "description": "The type of context being accessed; e.g., project, subscription, content-library. Used in conjunction with contextId.",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "default": "projects",
        "enum": [
          "projects"
        ]
      },
      "ApiErrorResponse": {
        "required": [
          "errors",
          "meta"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/ErrorMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ApiErrorResponseErrorSource": {
        "required": [
          "pointer"
        ],
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "Error": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/ApiErrorResponseErrorSource"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ErrorMeta": {
        "required": [
          "apiVersion",
          "error",
          "path",
          "status",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "apiVersion": {
            "$ref": "#/components/schemas/ErrorMetaApiVersion"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ErrorMetaApiVersion": {
        "type": "object",
        "properties": {
          "requested": {
            "type": "string"
          },
          "served": {
            "type": "string"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ApiRequestMetadataCreateRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetadataCreateRequest"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "CreateMetadataTypeDto": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "FOLDER",
          "PLACEHOLDER"
        ]
      },
      "MetadataCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CreateMetadataTypeDto"
          },
          "publishingStatus": {
            "$ref": "#/components/schemas/UpdatePublishingStatus"
          },
          "permissions": {
            "$ref": "#/components/schemas/PermissionOptions"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "PermissionOptions": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "INHERIT",
          "HIDDEN"
        ]
      },
      "UpdatePublishingStatus": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "PUBLISHED",
          "UNPUBLISHED"
        ]
      },
      "ApiResponseMetadataResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetadataResponse"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "Link": {
        "required": [
          "href",
          "type"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "MetadataResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/MetadataType"
          },
          "availableDate": {
            "type": "integer",
            "description": "Serialized as UTC-0 epoch milliseconds",
            "format": "int64",
            "example": 1551215688181
          },
          "status": {
            "$ref": "#/components/schemas/MetadataStatus"
          },
          "fileroomId": {
            "type": "string"
          },
          "fileroomName": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "publishingStatus": {
            "$ref": "#/components/schemas/PublishingStatus"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "MetadataStatus": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "INITIAL",
          "PROCESSING",
          "DONE",
          "FAILED"
        ]
      },
      "MetadataType": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "FILEROOM",
          "DOCUMENT",
          "FOLDER",
          "RECYCLE_BIN",
          "SANDBOX",
          "INBOX",
          "PLACEHOLDER"
        ]
      },
      "PublishingStatus": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "PUBLISHED",
          "PARTIAL",
          "UNPUBLISHED"
        ]
      },
      "ApiRequestFileroomCreateRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FileroomCreateRequest"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "FileroomCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the fileroom"
          },
          "publishingStatus": {
            "$ref": "#/components/schemas/UpdatePublishingStatus"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ApiRequestMetadataUpdateRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetadataUpdateRequest"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "MetadataUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "publishingStatus": {
            "$ref": "#/components/schemas/UpdatePublishingStatus"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "AccessLevelDto": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "HIDDEN",
          "VIEW",
          "PRINT",
          "DOWNLOAD",
          "MANAGE"
        ]
      },
      "ApiRequestUpdateMetadataPermissionRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UpdateMetadataPermissionRequest"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "UpdateMetadataPermissionRequest": {
        "type": "object",
        "properties": {
          "accessLevel": {
            "$ref": "#/components/schemas/AccessLevelDto"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ApiResponseOperationResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OperationResponse"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "OperationResponse": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ApiResponseOperation": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Operation"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "Operation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/OperationStatus"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "OperationStatus": {
        "type": "string",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "IN_PROGRESS",
          "COMPLETED",
          "FAILED"
        ]
      },
      "ApiResponseListMetadataResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataResponse"
            }
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      }
    },
    "securitySchemes": {
      "AuthToken": {
        "type": "http",
        "name": "AuthToken",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}