{
  "id": "upload",
  "openapi": "3.0.1",
  "info": {
    "title": "Uploads",
    "description": "A virtual data room (VDR) allows you to securely store documents within\nfilerooms and folders and share that information with third parties.\n\nYou can use the Upload API to add files into any fileroom or folder to\nwhich you have content management permissions.\n\n\n## Errors\n\nThe following is a list of errors that might be produced by this service.\n\n| Error Code | HTTP Status | Description |\n| --- | --- | --- |\n| DS0001 | 500 INTERNAL_SERVER_ERROR | Generic internal server error<br/><br/>*Example Message*:<br/>`Unexpected error` |\n| DS0002 | 404 NOT_FOUND | Generic not found error.  Used when the error source or request path makes it obvious what's not found or where a cause will be attached and logged error will facilitate in diagnosis<br/><br/>*Example Message*:<br/>`Resource Not Found` |\n| DS0003 | 404 NOT_FOUND | Not found error identifying what's not found using unstructured information in the message<br/><br/>*Example Message*:<br/>`some resource Not Found` |\n| DS0010 | 400 BAD_REQUEST | API expected a request body that was not provided<br/><br/>*Example Message*:<br/>`Required request body is missing` |\n| DS0011 | 400 BAD_REQUEST | Unable to deserialize the request<br/><br/>*Example Message*:<br/>`Cannot Deserialize` |\n| DS0012 | 400 BAD_REQUEST | Validation on an argument failed<br/><br/>*Example Message*:<br/>`Method argument not valid` |\n| DS0013 | 400 BAD_REQUEST | Validation on an argument failed<br/><br/>*Example Message*:<br/>`Constraint violation` |\n| DS0014 | 400 BAD_REQUEST | *Example Message*:<br/>`Attribute Not Valid` |\n| DS0015 | 405 METHOD_NOT_ALLOWED | *Example Message*:<br/>`Method Not Allowed` |\n| DS0016 | 415 UNSUPPORTED_MEDIA_TYPE | *Example Message*:<br/>`Unsupported Media Type` |\n| DS0017 | 403 FORBIDDEN | *Example Message*:<br/>`Forbidden` |\n| DS0018 | 400 BAD_REQUEST | *Example Message*:<br/>`Bad Request` |\n| DS0019 | 400 BAD_REQUEST | Input is mismatched and cannot be deserialized. Please refer to the API documentation.<br/><br/>*Example Message*:<br/>`Mismatched Input` |\n| DS0020 | 400 BAD_REQUEST | *Example Message*:<br/>`Unable to read request body` |\n| PUP4001 | 400 BAD_REQUEST | *Example Message*:<br/>`Problem creating manifest parentId=parentId fileId=fileId` |\n| PUP4002 | 400 BAD_REQUEST | *Example Message*:<br/>`Problem uploading file fileId=fileId` |\n| PUP4003 | 400 BAD_REQUEST | *Example Message*:<br/>`Problem finding metadata fileId=fileId` |\n| PUP4013 | 413 PAYLOAD_TOO_LARGE | *Example Message*:<br/>`File size is too large` |\n| PUP4030 | 403 FORBIDDEN | *Example Message*:<br/>`User does not have permission to upload manifest` |\n| UPG0001 | 500 INTERNAL_SERVER_ERROR | This will be produced as a final fallback for any unhandled errors<br/><br/>*Example Message*:<br/>`some adhoc unexpected error` |\n| UPG0002 | 500 INTERNAL_SERVER_ERROR | Produced when the request is valid, but some other scenario has resulted in more than one usage policy being selected when only one should.<br/><br/>*Example Message*:<br/>`It is unclear which usage policy to use` |\n| UPG0003 | 500 INTERNAL_SERVER_ERROR | The guard request should have returned a resource reservation id and did not<br/><br/>*Example Message*:<br/>`The guard request should have returned a resource reservation id and did not` |\n| UPG0004 | 500 INTERNAL_SERVER_ERROR | The HTTP request context is not defined<br/><br/>*Example Message*:<br/>`The HTTP request context is not defined` |\n| UPG0005 | 403 FORBIDDEN | User is not a member of the usage policy specified<br/><br/>*Example Message*:<br/>`User is not a member of the usage policy specified` |\n\n| Included Audiences | Included Lifecycles |\n| --- | --- |\n| PUBLIC | GA |\n\n",
    "version": "2024-04-01",
    "x-datasite-summary": "Upload documents to a project with the Upload API.",
    "x-datasite-audience-lifecycle-index": [
      {
        "audience": "PUBLIC",
        "lifecycle": "GA"
      }
    ]
  },
  "servers": [
    {
      "url": "https://api.americas.datasite.com",
      "description": "Datasite API Gateway - USA"
    }
  ],
  "security": [
    {
      "AuthToken": []
    }
  ],
  "paths": {
    "/{contextType}/{contextId}/metadata/{metadataId}/children": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "Upload a single file",
        "description": "\n| Introduced On Version | Audience | Lifecycle |\n| --- | --- | --- |\n| 2024-04-01 | PUBLIC | GA |\n\n",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "contextType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContextTypePathParameter"
            }
          },
          {
            "name": "contextId",
            "in": "path",
            "description": "The id of the context being accessed; e.g., a project id when used in conjunction with a project contextType.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadataId",
            "in": "path",
            "description": "The id of the folder or fileroom where the file is uploaded",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-datasite-api-version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2024-04-01",
              "enum": [
                "2024-04-01"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PublicUploadDto"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "data": {
                  "contentType": "application/json"
                },
                "file": {
                  "contentType": "application/octet-stream"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePublicUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-datasite-api-introduced-on": "2024-04-01",
        "x-datasite-api-lifecycle": "GA",
        "x-datasite-api-audience": "PUBLIC"
      }
    }
  },
  "components": {
    "schemas": {
      "ContextTypePathParameter": {
        "type": "string",
        "description": "The type of context being accessed; e.g., project, subscription, content-library. Used in conjunction with contextId.",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "default": "projects",
        "enum": [
          "projects"
        ]
      },
      "ApiErrorResponse": {
        "required": [
          "errors",
          "meta"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/ErrorMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ApiErrorResponseErrorSource": {
        "required": [
          "pointer"
        ],
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "Error": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/ApiErrorResponseErrorSource"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ErrorMeta": {
        "required": [
          "apiVersion",
          "error",
          "path",
          "status",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "apiVersion": {
            "$ref": "#/components/schemas/ErrorMetaApiVersion"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "ErrorMetaApiVersion": {
        "type": "object",
        "properties": {
          "requested": {
            "type": "string"
          },
          "served": {
            "type": "string"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "Permissions": {
        "type": "string",
        "description": "Permissions to apply to file",
        "example": "INHERIT",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "INHERIT",
          "HIDDEN"
        ]
      },
      "PublicUploadDto": {
        "required": [
          "filename",
          "permissions",
          "publishingStatus"
        ],
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "Name for uploaded file"
          },
          "publishingStatus": {
            "$ref": "#/components/schemas/PublishingStatus"
          },
          "permissions": {
            "$ref": "#/components/schemas/Permissions"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "PublishingStatus": {
        "type": "string",
        "description": "Publishing status to apply to file",
        "example": "UNPUBLISHED",
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ],
        "enum": [
          "PUBLISHED",
          "UNPUBLISHED"
        ]
      },
      "ApiResponsePublicUploadResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PublicUploadResponse"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      },
      "PublicUploadResponse": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "x-datasite-audience-lifecycle-index": [
          {
            "audience": "PUBLIC",
            "lifecycle": "GA"
          }
        ]
      }
    },
    "securitySchemes": {
      "AuthToken": {
        "type": "http",
        "name": "AuthToken",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}